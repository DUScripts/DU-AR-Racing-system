{"slots":{"0":{"name":"receiver","type":{"events":[],"methods":[]}},"1":{"name":"emitter","type":{"events":[],"methods":[]}},"2":{"name":"button","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"system.print(\"SERVER chan/mess: \"..message)\n\nif channel == tostring(player.getId())..\"S\" then\n    if message == \"start upload\" then\n        state = \"uploading\"\n        chunkInd = 1\n        system.print(\"SERVER chunkIND: \"..chunkInd)\n    elseif message == \"received\" then\n        if chunkInd < #parsedData then\n            chunkInd = chunkInd + 1\n            system.print(\"SERVER chunkIND: \"..chunkInd)\n        else\n            state = \"upload succes\" \n        end\n    elseif message == \"end upload\" then\n        unit.exit()\n    end\nend\n","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"onReceived(channel,message)","slotKey":"0"},"key":"0"},{"code":"---------------Track1-----------------\n\ncircuitName1 = \"TEST\"\nversion = 1.0\nWP1 = {\n    \"::pos{0,0,-63699.1799,98437.1090,-172621.4609}\",\n    \"::pos{0,0,-63784.1004,98513.8851,-172340.7150}\",\n    \"::pos{0,0,-63945.8581,98527.8429,-172085.9602}\",\n    \"::pos{0,0,-64161.2476,98483.2996,-171880.2939}\",\n    \"::pos{0,0,-64408.0616,98389.6893,-171734.5857}\",\n    \"::pos{0,0,-64667.3416,98260.8270,-171645.5683}\",\n    \"::pos{0,0,-64926.1799,98110.0121,-171602.8479}\",\n    \"::pos{0,0,-65168.4993,97932.6187,-171638.6312}\",\n    \"::pos{0,0,-65302.3813,97750.2449,-171838.6821}\",\n    \"::pos{0,0,-63699.1799,98437.1090,-172621.4609}\",\n    \"::pos{0,0,-63784.1004,98513.8851,-172340.7150}\",\n    \"::pos{0,0,-63945.8581,98527.8429,-172085.9602}\",\n    \"::pos{0,0,-64161.2476,98483.2996,-171880.2939}\",\n    \"::pos{0,0,-64408.0616,98389.6893,-171734.5857}\",\n    \"::pos{0,0,-64667.3416,98260.8270,-171645.5683}\",\n    \"::pos{0,0,-64926.1799,98110.0121,-171602.8479}\",\n    \"::pos{0,0,-65168.4993,97932.6187,-171638.6312}\",\n    \"::pos{0,0,-65302.3813,97750.2449,-171838.6821}\",\n    \"::pos{0,0,-63699.1799,98437.1090,-172621.4609}\",\n    \"::pos{0,0,-63784.1004,98513.8851,-172340.7150}\",\n    \"::pos{0,0,-63945.8581,98527.8429,-172085.9602}\",\n    \"::pos{0,0,-64161.2476,98483.2996,-171880.2939}\",\n    \"::pos{0,0,-64408.0616,98389.6893,-171734.5857}\",\n    \"::pos{0,0,-64667.3416,98260.8270,-171645.5683}\",\n    \"::pos{0,0,-64926.1799,98110.0121,-171602.8479}\",\n    \"::pos{0,0,-65168.4993,97932.6187,-171638.6312}\",\n    \"::pos{0,0,-65302.3813,97750.2449,-171838.6821}\",\n}\n\ncircuitName2 = \"Hadron Island Cup\"\nversion2 = 1.0\ntourEnd2 = 1\nwpRadius2 = 30\nWP2 = {\"::pos{0,0,-63701.0244,98444.4800,-172615.3340}\",\"::pos{0,0,-63831.9334,98511.1526,-172292.0900}\",\"::pos{0,0,-64008.7324,98539.3242,-171985.5350}\",\"::pos{0,0,-64185.5375,98567.7629,-171675.5668}\",\"::pos{0,0,-64303.3265,98641.5989,-171347.6836}\",\"::pos{0,0,-64175.8923,98844.1450,-171085.1193}\",\"::pos{0,0,-64028.4291,99050.4577,-170834.6557}\",\"::pos{0,0,-63887.8749,99254.0662,-170580.4176}\",\"::pos{0,0,-63738.9925,99462.6367,-170333.7924}\",\"::pos{0,0,-63592.0624,99668.1140,-170082.2974}\",\"::pos{0,0,-63446.9559,99872.2365,-169827.4056}\",\"::pos{0,0,-63331.0731,100066.0723,-169550.5741}\",\"::pos{0,0,-63289.7118,100227.2853,-169237.1524}\",\"::pos{0,0,-63343.0495,100336.9319,-168901.6204}\",\"::pos{0,0,-63500.8145,100372.3677,-168582.6991}\",\"::pos{0,0,-63785.5103,100271.5602,-168393.4900}\",\"::pos{0,0,-64013.3894,100055.1535,-168562.7052}\",\"::pos{0,0,-64110.8814,99870.2473,-168851.8957}\",\"::pos{0,0,-64070.0116,99753.9634,-169185.4450}\",\"::pos{0,0,-63900.9214,99728.1947,-169497.0647}\",\"::pos{0,0,-63599.5837,99862.3357,-169632.1370}\",\"::pos{0,0,-63291.8290,100041.1550,-169670.7196}\",\"::pos{0,0,-62997.2009,100238.5012,-169644.4347}\",\"::pos{0,0,-62697.5756,100432.1810,-169631.0428}\",\"::pos{0,0,-62388.2968,100597.5038,-169694.4216}\",\"::pos{0,0,-62086.9870,100718.9022,-169845.1660}\",\"::pos{0,0,-61823.9540,100780.4831,-170076.7967}\",\"::pos{0,0,-61672.4907,100734.9658,-170394.6049}\",\"::pos{0,0,-61408.2641,100795.8625,-170624.0843}\",\"::pos{0,0,-61437.7175,100638.2073,-170941.0060}\",\"::pos{0,0,-61491.8129,100467.5265,-171250.4897}\",\"::pos{0,0,-61533.2329,100297.1026,-171558.8242}\",\"::pos{0,0,-61586.2551,100125.8902,-171865.3272}\",\"::pos{0,0,-61651.3929,99948.7401,-172165.7685}\",\"::pos{0,0,-61716.4072,99769.6291,-172467.8875}\",\"::pos{0,0,-61770.5634,99594.2359,-172773.6705}\",\"::pos{0,0,-61868.2323,99399.9988,-173057.4663}\",\"::pos{0,0,-61981.1455,99201.0586,-173330.4611}\",\"::pos{0,0,-62139.2479,98988.4014,-173569.8966}\",\"::pos{0,0,-62369.7464,98767.2102,-173729.3626}\",\"::pos{0,0,-62636.7307,98551.7825,-173822.0805}\",\"::pos{0,0,-62906.6330,98335.6825,-173912.1670}\",\"::pos{0,0,-63192.6620,98128.9178,-173958.9624}\",\"::pos{0,0,-63425.5386,98107.6863,-173689.7001}\",\"::pos{0,0,-63512.1176,98211.5669,-173359.2689}\",\"::pos{0,0,-63596.1372,98315.5846,-173029.3341}\",}\n\n\ncircuitName3 = \"Anvilworks\"\nversion = 1.0\ntourEnd = 3\nwpRadius = 40\n--WP3 = {{-10427.191766632,125250.04403733,-136174.8982278},{-10321.356280441,125308.38027008,-135581.03560267},{-10145.59753891,125285.12534055,-136036.71495979},{-10152.371402091,125270.38914393,-136297.16215883},{-9978.9630382995,125278.17256978,-136460.39383245},{-9763.8099231035,125282.0545635,-136725.4610423},[-9810.1950606202,125250.44335343,-137040.29677926},{-9942.8814473145,125187.58469311,-137454.51410152},{-9612.4422042566,125225.59061445,-137376.00201583},{-9228.9248868104,125262.33354363,-137322.35091768},{-9309.871781605,125231.27667506,-137644.44786804},{-9574.6032569077,125203.24697419,-137625.51316182},{-10184.084790797,125133.79641896,-137801.38500676},{-11136.461110828,125074.37170575,-137480.50747957},{-11383.312009255,125063.31764091,-137331.35724487},{-11628.761876611,125048.92020156,-137234.333348},{-11237.593699774,125141.76530833,-136613.17425835},{-11092.49282248,125135.53367889,-136793.91322043},{-11106.863262918,125114.67153891,-137022.61111518},{-11031.345503089,125099.46834382,-137273.00671513},{-10416.620541541,125164.8853373,-137209.58725287},{-10427.239477496,125249.43300261,-136184.36135706}}\n\n    \n    \n    \ncircuitName4=\"Wonderland\"\nversion4=1.0\nwpRadius4=34\ntourEnd4=3\nwaypoints4={\"::pos{0,0,19546.473287674,92393.100059228,-42687.04526573}\",\"::pos{0,0,19421.61057004,92160.175713119,-42400.116619582}\",\"::pos{0,0,19280.516791103,92136.71009552,-42329.637101165}\",\"::pos{0,0,19341.487501839,91928.727228228,-42078.882806277}\",\"::pos{0,0,19392.183721047,91786.358690897,-41932.979505043}\",\"::pos{0,0,19260.906360035,91684.484165691,-41789.946160488}\",\"::pos{0,0,19154.66877874,91984.617466475,-42115.758073778}\",\"::pos{0,0,19191.596139469,92094.567412508,-42246.567880761}\",\"::pos{0,0,18926.595808831,92140.622224698,-42241.306108276}\",\"::pos{0,0,18423.578861143,92122.080112868,-42173.902372165}\",\"::pos{0,0,18163.451020206,92246.105621714,-42257.42105937}\",\"::pos{0,0,18016.528895666,92437.776556164,-42435.131225905}\",\"::pos{0,0,17909.629078185,92576.495214723,-42564.28930207}\",\"::pos{0,0,18085.919079682,92800.721777058,-42853.542023706}\",\"::pos{0,0,18022.070741811,92848.467171443,-42891.720807292}\",\"::pos{0,0,17751.440946054,92689.107015941,-42652.06562447}\",\"::pos{0,0,17522.543488378,92726.281173833,-42660.489265571}\",\"::pos{0,0,17634.717677921,92832.404570745,-42814.241382057}\",\"::pos{0,0,18078.40694133,92787.412577997,-42888.965085796}\",\"::pos{0,0,18536.986361255,92722.153024435,-42923.578552253}\",\"::pos{0,0,18255.127680104,92881.624222725,-43034.72005751}\",\"::pos{0,0,17906.335325357,92920.681180339,-42964.336097245}\",\"::pos{0,0,17693.583217854,92935.616636238,-42931.120544349}\",\"::pos{0,0,17546.826241888,93019.882570138,-42990.715833694}\",\"::pos{0,0,17530.841536549,92729.479471864,-42664.162705037}\",\"::pos{0,0,17749.09789684,92681.968039439,-42643.831410138}\",\"::pos{0,0,18029.813648598,92842.795151644,-42886.751802582}\",\"::pos{0,0,18085.112175262,92801.419241814,-42854.132108079}\",\"::pos{0,0,17907.459662794,92577.38627035,-42564.709356171}\",\"::pos{0,0,18011.278814987,92439.704458201,-42436.009998971}\",\"::pos{0,0,18166.619855253,92249.657444054,-42261.857336438}\",\"::pos{0,0,18426.800441086,92116.863176859,-42169.607175152}\",\"::pos{0,0,18917.482287403,92136.704751235,-42231.617222111}\",\"::pos{0,0,19066.808369027,92193.235856,-42336.567436926}\",\"::pos{0,0,18965.704743354,92524.346440252,-42693.055362753}\",\"::pos{0,0,18925.194524057,92849.041386556,-43135.923346676}\",\"::pos{0,0,19004.555095314,92943.139664918,-43259.62512065}\",\"::pos{0,0,18857.340207691,93125.507090783,-43427.304597774}\",\"::pos{0,0,18647.289980783,93157.626951408,-43388.276360368}\",\"::pos{0,0,18538.584674214,93090.908519486,-43289.868090352}\",\"::pos{0,0,19067.072366439,93012.027230313,-43278.980119674}\",\"::pos{0,0,19385.537830505,92931.986066879,-43245.402058114}\",\"::pos{0,0,19550.299102683,92394.404536148,-42689.204226482}\"}\n\n\n\ndata2Send = {\n                circuitName = circuitName2,\n                version = version2,\n                waypoints = WP2,\n                wpRadius =wpRadius2,\n                tourEnd =tourEnd2,\n            }\n\n\n\n----------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------------------------------------------------\nstate = \"start\"\nchunkInd = 1\nparsedData = {}\nchannels = {tostring(player.getId())..\"S\"}\nreceiver.setChannelList(channels)\n\n\nlocal serializedData = serialize(data2Send)\nlocal stringLength = #serializedData\nsystem.print(\"data to send length: \"..stringLength)\nlocal numberOfChunk = math.floor(stringLength / 512) -- =0\nparsedData = {}\n\nlocal ind = 0\nfor i = 1, numberOfChunk do\n    parsedData[i] = string.sub(serializedData, (i-1) * 512 + 1, i * 512)\n    ind = i\nend\n\nparsedData[#parsedData+1] = string.sub(serializedData, ind * 512 + 1, -1)\nsystem.print(\"number of chunks: \"..#parsedData)\n\n\nunit.setTimer(\"upload\",1)","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"1"},{"code":"--emitter.send(\"tracksync\",serialize(data2))","filter":{"args":[],"signature":"onStop()","slotKey":"-1"},"key":"2"},{"code":"if state == \"start\" then\n    emitter.send(tostring(player.getId())..\"R\",\"upload\")\n    system.print(\"SERVER: upload\")\nelseif state == \"uploading\" then\n    emitter.send(tostring(player.getId())..\"R\",parsedData[chunkInd])\n    system.print(\"SERVER: uploading\")\nelseif state == \"upload succes\" then\n    system.print(\"SERVER: upload succes\")\n    emitter.send(tostring(player.getId())..\"R\",\"upload finished\")\n    --unit.exit()\nend\n    \n\n\n\n\n","filter":{"args":[{"value":"upload"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"3"},{"code":"local concat = table.concat\n\nlocal function internalSerialize(table, tC, t)\n    t[tC] = \"{\"\n    tC = tC + 1\n    if #table == 0 then\n        local hasValue = false\n        for key, value in pairs(table) do\n            hasValue = true\n            local keyType = type(key)\n            if keyType == \"string\" then\n                t[tC] = key .. \"=\"\n            elseif keyType == \"number\" then\n                t[tC] = \"[\" .. key .. \"]=\"\n            elseif keyType == \"boolean\" then\n                t[tC] = \"[\" .. tostring(key) .. \"]=\"\n            else\n                t[tC] = \"notsupported=\"\n            end\n            tC = tC + 1\n\n            local check = type(value)\n            if check == \"table\" then\n                tC = internalSerialize(value, tC, t)\n            elseif check == \"string\" then\n                t[tC] = '\"' .. value .. '\"'\n            elseif check == \"number\" then\n                t[tC] = value\n            elseif check == \"boolean\" then\n                t[tC] = tostring(value)\n            else\n                t[tC] = '\"Not Supported\"'\n            end\n            t[tC + 1] = \",\"\n            tC = tC + 2\n        end\n        if hasValue then\n            tC = tC - 1\n        end\n    else\n        for i = 1, #table do\n            local value = table[i]\n            local check = type(value)\n            if check == \"table\" then\n                tC = internalSerialize(value, tC, t)\n            elseif check == \"string\" then\n                t[tC] = '\"' .. value .. '\"'\n            elseif check == \"number\" then\n                t[tC] = value\n            elseif check == \"boolean\" then\n                t[tC] = tostring(value)\n            else\n                t[tC] = '\"Not Supported\"'\n            end\n            t[tC + 1] = \",\"\n            tC = tC + 2\n        end\n        tC = tC - 1\n    end\n    t[tC] = \"}\"\n    return tC\nend\n\nfunction serialize(value)\n    local t = {}\n    local check = type(value)\n\n    if check == \"table\" then\n        internalSerialize(value, 1, t)\n    elseif check == \"string\" then\n        return '\"' .. value .. '\"'\n    elseif check == \"number\" then\n        return value\n    elseif check == \"boolean\" then\n        return tostring(value)\n    else\n        return '\"Not Supported\"'\n    end\n\n    return concat(t)\nend\n\nfunction deserialize(s)\n    return load(\"return \" .. s)()\nend","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"4"},{"code":"\n    \n","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"5"}],"methods":[],"events":[]}
